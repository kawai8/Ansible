---
# This module asserts that given expressions are true with an optional custom message.
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html

- hosts: localhost
  gather_facts: no

  tasks:
    - name: Input data validation
      block:
        - name: Input data validation
          assert:
            that:
              - ip_address is match('^[0-9]{2,3}\.[0-9]{2,3}\.[0-9]{2,3}\.[0-9]{1,3}$')
              - var1 is defined and user != ""
              - var2 in ["staging", "production"]
            fail_msg: "The specified input data is invalid."
            quiet: false
          register: input_assert
          ignore_errors: true
        - name: Output Error Msg
          block:
            - name: If failed to assert input data
              debug:
                msg: "{{ return_msg }}"
            - name: Failure with Error Msg
              fail:
          when: input_assert.failed





# -------------------------------------
# assign a list to 'that:' Parameter
# -------------------------------------
# vars file
pb1:
  - var1 in ['apple', 'lemon', 'berry']
  - "'foo' in result.stdout"
  - number_of_the_counting == 3
pb2:
  - var1 is match('^[0-9]{2,3}\.[0-9]{2,3}\.[0-9]{2,3}\.[0-9]{1,3}$')
  - my_param <= 100
  - my_param >= 0

# play task
  - name: input data validation2
    assert:
      that:
        "{{ lookup('vars', pb) }}"
        fail_msg: "The specified input data is invalid."
        success_msg: "Input data validation PASS!"
        quiet: False





